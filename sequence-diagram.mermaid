sequenceDiagram
    actor User
    participant Runner as run_pipeline.py
    participant Figma as Figma API
    participant Analyzer as figma_analyzer.py
    participant Markdown as markdown_generator.py
    participant Crew as crew_runner.py
    participant JSON as spec_to_json_agent
    participant DAG as LangGraph DAG
    participant Output as Generated Project
    
    User->>Runner: run_pipeline.py --figma-key KEY
    Runner->>Figma: download_figma_file()
    Figma-->>Runner: Figma JSON
    Runner->>Analyzer: analyze_and_save()
    Analyzer-->>Runner: summary_report.json
    Runner->>Markdown: generate_spec()
    Markdown->>OpenAI: Call GPT-4 API
    OpenAI-->>Markdown: Markdown specification
    Markdown-->>Runner: figma_markdown.md
    Runner->>Crew: run_codegen_pipeline()
    Crew->>JSON: markdown_to_json()
    JSON->>Claude: Call Claude API
    Claude-->>JSON: JSON structure
    JSON-->>Crew: Parsed JSON
    Crew->>DAG: build_project_graph().invoke()
    
    DAG->>PlanStructure: plan_structure()
    PlanStructure-->>DAG: structure_plan
    DAG->>GenerateCode: generate_code()
    GenerateCode->>OpenAI: Call GPT-4 API 
    OpenAI-->>GenerateCode: Swift code
    GenerateCode-->>DAG: generated_files
    DAG->>AssembleProject: assemble_project()
    AssembleProject-->>DAG: status
    DAG->>CIDocs: generate_ci_and_docs()
    CIDocs-->>DAG: status
    DAG-->>Crew: Execution complete
    Crew-->>Runner: Code generation complete
    Runner-->>Output: Generated Swift project
    Runner-->>User: Process complete